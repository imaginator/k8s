apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfin               # < label for tagging and reference
  name: jellyfin                # < name of the deployment
  namespace: jellyfin           # < namespace where to place the deployment and pods
spec:
  replicas: 1                     # < number of pods to deploy
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: jellyfin
  strategy:
    rollingUpdate:
      maxSurge: 0                 # < The number of pods that can be created above the desired amount of pods during an update
      maxUnavailable: 1           # < The number of pods that can be unavailable during the update process
    type: RollingUpdate           # < New pods are added gradually, and old pods are terminated gradually
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      volumes:
      - name: jellyfin-data
        persistentVolumeClaim:
          claimName: jellyfin-pvc-data
      - name: jellyfin-films
        persistentVolumeClaim:
          claimName: jellyfin-pvc-film
          readOnly: true
      - name: jellyfin-tv
        persistentVolumeClaim:
          claimName: jellyfin-pvc-tv
          readOnly: true
      - name: jellyfin-audiobooks
        persistentVolumeClaim:
          claimName: jellyfin-pvc-audiobooks
          readOnly: true
      - name: jellyfin-music
        persistentVolumeClaim:
          claimName: jellyfin-pvc-music
          readOnly: true
      - name: jellyfin-photos
        persistentVolumeClaim:
          claimName: jellyfin-pvc-photos
          readOnly: true
      containers:
      - env:
        - name: PGID
          value: "\x31\x30\x30"     # < ASCII code for '100'
        - name: PUID
          value: "\x31\x30\x33\x35" # < ACII code for '1035'
        - name: VERSION
          value: latest
        - name: TZ
          value: Europe/Amsterdam  # < Timezone
        volumeMounts:            # < the volume mount in the container. Look at the relation volumelabel->pvc->pv
        - mountPath: /config     # < mount location in the container
          name: jellyfin-data
        - mountPath: /media/film
          name: jellyfin-films
        - mountPath: /media/tv
          name: jellyfin-tv
        - mountPath: /media/audiobooks
          name: jellyfin-audiobooks
        - mountPath: /media/music
          name: jellyfin-music        
        - mountPath: /media/photos
          name: jellyfin-photos
        image: docker.io/jellyfin/jellyfin
        imagePullPolicy: Always
        name: jellyfin
        ports:
        - containerPort: 8096
          name: jellyfin-web
          protocol: TCP
        resources: {}
        stdin: true
        tty: true
      restartPolicy: Always
